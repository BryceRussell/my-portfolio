---
import { getTags } from '@/util';
import type { Frontmatter } from '@/types';
import Base from "@/layouts/Base.astro";

export async function getStaticPaths() {
    const articles = await Astro.glob('../../../blog/*.md')
    return getTags(articles).map((tag) => {
        return {
            params: {
                tag
            },
            props: {
                articles: articles.filter(article => article.frontmatter.tags&&article.frontmatter.tags.includes(tag))
            } 
        }
    })
}

export interface Props {
    articles?: any[];
}

const {
    articles=[]
} = Astro.props

const {
    tag
} = Astro.params

---

<Base>
    <h1 class="text-center">#{tag}</h1>
    <div class="flex flex-col gap-5 my-5">
        { articles.map((article) => {
            const {
                slug,
                title,
                description,
                date='',
                tags=[],
            } = article.frontmatter as Frontmatter

            return (
                <article>
                    <a href={`/blog/${slug}`} class="text-darker font-bold">{title}</a>
                    <div class="flex flex-col sm:flex-row items-start gap-x-3 text-fluid-0">
                        <time class="whitespace-nowrap text-grayer">{(new Date(date)).toDateString()}</time>
                        <div class="flex flex-wrap gap-x-3">                            
                            {tags.map((tag) => {
                                return <a href={`/blog/tags/${tag}`}>#{tag}</a>
                            })}
                        </div>
                    </div>
                    <p class="text-fluid-0">
                        {description}
                    </p>
                </article>
            )
        })}
    </div>
</Base>